#include <stdio.h>
#include <malloc.h>
#include <stdlib.h>
#include <algorithm>
#include <windows.h>

void fill(int*, int);

/*** главная функция ***/
int main() {
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);


    int* Ar, /* указатель на начало массива */
        * Cr; /* текущий указатель у массиве */
    int i,   /* счетчик элементов */
        S;   /* размерность матрицы */

     /* ввод размерности */
    printf("Введите размерность матрицы >");
    scanf_s("%d", &S);
    /* проверка размерности */
    if (S <= 0) {
        printf("Размерность слишком мала\n");
        exit(0);
    }
    if (S > 24) {
        printf("Размерность слишком велика\n");
        exit(0);
    }
    printf("S=%d\n", S);
    /* выделение памяти */
    if ((Ar = (int*)malloc(sizeof(int) * S * S)) == NULL) {
        printf("Недостаток памяти\n");
        exit(0);
    }
    /* обращение к функции заполнения матрицы */
    fill(Ar, S);
    /* вывод матрицы */
    for (Cr = Ar, i = 0; i < S * S; Cr++, i++) {
        printf("%3d", *Cr);
        if (i % S == S - 1) putchar('\n');
    }
    /* освобождение памяти */

    free(Ar);
    return 0;
}
/*** функция заполнения матрицы ***/
/* параметры: A - указатель на начало массива
              s - размерность матрицы */
void fill(int* A, int s) {
    int* C;      /* текущий указатель в массиве */
    short l, r;  /* строка и столбец */
    int k = 1;     /* текущий член ЛП */
    for (l = 0, C = A; l < s; l++)     /* перебор строк */
        for (r = 0; r < s; r++, C++)  /* перебор столбцов */
          /* условие нулевого значения */
            if ((r >= fmax(l, s - l - 1)) || (r <= fmin(l, s - l - 1))) *C = 0;
            else *C = k++;
    /* конец перебора строк */
  /* конец перебора столбцов */
}